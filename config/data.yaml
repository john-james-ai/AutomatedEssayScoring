#!/usr/bin/env python3
# -*- coding:utf-8 -*-
# ================================================================================================ #
# Project    : Automated Essay Scoring: A Data-First Deep Learning Approach                        #
# Version    : 0.1.0                                                                               #
# Python     : 3.9.12                                                                              #
# Filename   : /config.yaml                                                                        #
# ------------------------------------------------------------------------------------------------ #
# Author     : John James                                                                          #
# Email      : john.james.ai.studio@gmail.com                                                      #
# URL        : https://github.com/john-james-ai/AutomatedEssayScoring                              #
# ------------------------------------------------------------------------------------------------ #
# Created    : Tuesday August 9th 2022 09:53:35 pm                                                 #
# Modified   : Friday August 12th 2022 06:09:38 pm                                                 #
# ------------------------------------------------------------------------------------------------ #
# License    : BSD 3-clause "New" or "Revised" License                                             #
# Copyright  : (c) 2022 John James                                                                 #
# ================================================================================================ #
---
profile:
    token_attributes:
        - is_alpha  #  Does the token consist of alphabetic characters? Equivalent to token.text.isalpha().bool
        - is_ascii  #  Does the token consist of ASCII characters? Equivalent to all(ord(c) < 128 for c in token.text).bool
        - is_digit  #  Does the token consist of digits? Equivalent to token.text.isdigit().bool
        - is_lower  #  Is the token in lowercase? Equivalent to token.text.islower().bool
        - is_upper  #  Is the token in uppercase? Equivalent to token.text.isupper().bool
        - is_title  #  Is the token in titlecase? Equivalent to token.text.istitle().bool
        - is_punct  #  Is the token punctuation?bool
        - is_left_punct  #  Is the token a left punctuation mark, e.g. "(" ?bool
        - is_right_punct  #  Is the token a right punctuation mark, e.g. ")" ?bool
        - is_sent_start  #  Does the token start a sentence? bool or None if unknown. Defaults to True for the first token in the Doc.
        - is_sent_end  #  Does the token end a sentence? bool or None if unknown.
        - is_space  #  Does the token consist of whitespace characters? Equivalent to token.text.isspace().bool
        - is_bracket  #  Is the token a bracket?bool
        - is_quote  #  Is the token a quotation mark?bool
        - is_currency  #  Is the token a currency symbol?bool
        - like_url  #  Does the token resemble a URL?bool
        - like_num  #  Does the token represent a number? e.g. “10.9”, “10”, “ten”, etc.bool
        - like_email  #  Does the token resemble an email address?bool
        - is_oov  #  Is the token out-of-vocabulary (i.e. does it not have a word vector)?bool
        - is_stop  #  Is the token part of a “stop list”?

...